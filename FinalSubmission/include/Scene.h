#ifndef _SCENE_H_
#define _SCENE_H_

/// @file Scene.h
/// @author Ramon Blanquer
/// @brief This hold all the objects and lights that the parser interpred and later pushed into the scene

#include <fstream>
#include <string>
#include <vector>

#include "Shape.h"
#include "Light.h"

//----------------------------------------------------------------------------------------------------------------------
/// @class Scene
/// @brief Hold all the objects and lights of the scene
/// @author Ramon Blanquer
//----------------------------------------------------------------------------------------------------------------------
class Scene
{
public:
  //--------------------------------------------------------------------------------------------------------------------
  /// @brief Default constructor
  //--------------------------------------------------------------------------------------------------------------------
  Scene();
  //--------------------------------------------------------------------------------------------------------------------
  /// @brief Constructor which takes a string and sets it as the name of the scene
  /// @param[in] _n Name of the scene
  //--------------------------------------------------------------------------------------------------------------------
  Scene(std::string _n);
  //--------------------------------------------------------------------------------------------------------------------
  /// @brief Default destructor for the Scene class
  //--------------------------------------------------------------------------------------------------------------------
  ~Scene();
  //--------------------------------------------------------------------------------------------------------------------
  /// @brief Adds an shape obejct to the scene
  /// @param[in] Shape to push into the objects vector contanier
  //--------------------------------------------------------------------------------------------------------------------
  void addObject(geo::Shape *_object);
  //--------------------------------------------------------------------------------------------------------------------
  /// @brief Adds a light to the scene structure
  /// @param[in] Light to push
  //--------------------------------------------------------------------------------------------------------------------
  void addLight(Light  *_light);

  // give access to Renderer class to the private interface
  friend class Renderer;

private:
  //--------------------------------------------------------------------------------------------------------------------
  /// @brief Holds the name of the file scene
  //--------------------------------------------------------------------------------------------------------------------
  std::string m_fileName;
  //--------------------------------------------------------------------------------------------------------------------
  /// @brief Holds all the Shape objects in the scene
  //--------------------------------------------------------------------------------------------------------------------
  std::vector<geo::Shape*> m_objects;
  //--------------------------------------------------------------------------------------------------------------------
  /// @brief Holds all the Light instances of the scene
  //--------------------------------------------------------------------------------------------------------------------
  std::vector<Light*> m_lights;
};

#endif // Scene.h
